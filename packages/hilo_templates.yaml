sensor:
  - platform: template
    sensors:
      defi_hilo_in_progress:
        friendly_name: DÃ©fi Hilo en cours?
        unique_id: "defi_hilo_in_progress"
        value_template: "{{ is_state('sensor.defi_hilo', 'appreciation') or is_state('sensor.defi_hilo', 'pre_heat') or is_state('sensor.defi_hilo', 'reduction') }}"

      defi_hilo_allowed_kwh:
        unit_of_measurement: "kWh"
        friendly_name: Limite max defi
        unique_id: "defi_hilo_allowed_kwh"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{state_attr('sensor.defi_hilo', 'next_events')[0]['allowed_kWh']}}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_allowed_cash:
        friendly_name: Montant max defi
        unit_of_measurement: "$"
        unique_id: "defi_hilo_allowed_cash"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{ (state_attr('sensor.defi_hilo', 'next_events')[0]['allowed_kWh'] * 0.55) | round(2) }}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_used_kwh:
        friendly_name: kWh utilise defi
        unit_of_measurement: "kWh"
        unique_id: "defi_hilo_used_kwh"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{ state_attr('sensor.defi_hilo', 'next_events')[0]['used_kWh']}}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_used_cash:
        friendly_name: Montant utilise defi
        unit_of_measurement: "$"
        unique_id: "defi_hilo_used_cash"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{ (state_attr('sensor.defi_hilo', 'next_events')[0]['used_kWh'] * 0.55) | round(2) }}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_remaining_cash:
        friendly_name: Montant restant defi
        unit_of_measurement: "$"
        unique_id: "defi_hilo_remaining_cash"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{(( state_attr('sensor.defi_hilo', 'next_events')[0]['allowed_kWh'] - state_attr('sensor.defi_hilo', 'next_events')[0]['used_kWh']) * 0.55) | round(2) }}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_predicted_cash:
        friendly_name: Montant total predit defi
        unit_of_measurement: "$"
        unique_id: "defi_hilo_predicted_cash"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {% set debutdefi = as_timestamp(state_attr('sensor.defi_hilo', 'next_events')[0]['phases']['reduction_start']) %}
          {% set maintenant =  (now().timestamp()) %}
          {% set delta = ((maintenant - debutdefi)) // 60 | float %}
          {% if delta <= 0  %}
          {% set delta = 1 %}
          {%endif %}
          {% if delta >= 240  %}
          {% set delta = 240 %}
          {%endif %}
          {%set predicteduse = (1/(delta/ 240 )) * float(states('sensor.defi_hilo_used_kwh'),0) %}
          {{((float(states('sensor.defi_hilo_allowed_kwh'),0) - predicteduse) * 0.55)  | round(2) }}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_currentdefi_cash:
        friendly_name: Montant accumule estime defi
        unit_of_measurement: "$"
        unique_id: "defi_hilo_currentdefi_cash"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {% set debutdefi = as_timestamp(state_attr('sensor.defi_hilo', 'next_events')[0]['phases']['reduction_start']) %}
          {% set maintenant =  (now().timestamp()) %}
          {% set delta = ((maintenant - debutdefi) // 60) +1 | int %}
          {% if delta <= 0  %}
          {% set delta = 1 %}
          {%endif %}
          {% if delta >= 240  %}
          {% set delta = 240 %}
          {%endif %}
          {{ (delta/ 240 * ((float(states('sensor.defi_hilo_allowed_kwh'),0) - ((1/(delta/ 240 ) * float(states('sensor.defi_hilo_used_kwh'),0)))) * 0.55))  | round(2) }}
          {% else%}
          {{0}}
          {% endif %}

      defi_hilo_avg_cash:
        friendly_name: Montant moyen defi
        unit_of_measurement: "$"
        unique_id: "defi_hilo_avg_cash"
        value_template: >
          {% if state_attr('sensor.recompenses_hilo', 'history') | count > 0 %}  
            {% set recompense = states('sensor.recompenses_hilo') | float %}
            {% set nbdefis = states('sensor.defi_hilo_nb_defi_completes') | float %}
            {% if nbdefis > 0 %}
              {% set moyenne = (recompense / nbdefis) | round(2) %}
              {{"%.2f" | format(moyenne)}}
              {% else %}
                {{0}}
              {% endif %}
          {% else %}
            {{0}}
          {% endif %}

      defi_hilo_date_heure_next:
        friendly_name: Defi Hilo prochain moment
        unique_id: "defi_hilo_date_heure_next"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{as_timestamp((state_attr('sensor.defi_hilo','next_events')[0]['phases']['reduction_start']))|timestamp_custom("%A %Y-%m-%d %H:%M")  }}
          {% else%}
          {{'-'}}
          {% endif %}

      defi_hilo_date_heure_last:
        friendly_name: Defi Hilo moment le plus loin
        unique_id: "defi_hilo_date_heure_last"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 1 %}
          {{as_timestamp((state_attr('sensor.defi_hilo','next_events')[state_attr('sensor.defi_hilo', 'next_events') | length -1]['phases']['reduction_start']))|timestamp_custom("%A %Y-%m-%d %H:%M")  }}            
          {% else%}
          {{'-'}}
          {% endif %}

      defi_hilo_nb_defi_planifies:
        friendly_name: Nb de defis Hilo planifies
        unique_id: "defi_hilo_nb_defi_planifies"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{state_attr('sensor.defi_hilo', 'next_events') | length }}
          {% else%}
          {{'0'}}
          {% endif %}

      defi_hilo_nb_defi_completes:
        friendly_name: Nb de defis Hilo completes saison actuelle
        unique_id: "defi_hilo_nb_defi_completes"
        value_template: >
          {% if state_attr('sensor.recompenses_hilo', 'history') | length  > 0 %}
          {{state_attr('sensor.recompenses_hilo', 'history')[0]['events'] | length}}
          {% else%}
          {{'0'}}
          {% endif %}

      electricity_cost_today:
        friendly_name: Cout electricite aujourd'hui
        unit_of_measurement: "CAD"
        unique_id: "electricity_cost_today"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{ "%.2f"|format(1.15*(float(states.sensor.hilo_energy_total_low.state, 0) *    float(states.sensor.hilo_rate_low.state, 0) +    float(states.sensor.hilo_energy_total_medium.state, 0) *   float(states.sensor.hilo_rate_medium.state, 0) + 0.435))  | round(2)}}
          {% else%}
          {{'0'}}
          {% endif %}

      electricity_kwh_today_consomme:
        friendly_name: kWh electricite aujourd'hui consomme
        unit_of_measurement: "kWh"
        unique_id: "electricity_kwh_today_consomme"
        value_template: >
          {% if state_attr('sensor.defi_hilo', 'next_events') | length  > 0 %}
          {{ float(states.sensor.hilo_energy_total_low.state, 0) +    float(states.sensor.hilo_energy_total_medium.state, 0) }}
          {% else%}
          {{'0'}}
          {% endif %}

      electricite_kwh_consomme_aujourdhui:
        friendly_name: kWh electricite aujourd'hui consomme
        unit_of_measurement: "kWh"
        unique_id: "electricite_kwh_consomme_aujourdhui"
        value_template: >
          {{ float(states.sensor.hilo_energy_total_low.state, 0) +    float(states.sensor.hilo_energy_total_medium.state, 0) }}
