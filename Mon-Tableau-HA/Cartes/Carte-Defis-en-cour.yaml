type: custom:button-card
template: frame
padding-bottom: 1px
custom_fields:
  buttons:
    card:
      type: custom:layout-card
      layout_type: custom:grid-layout
      cards:
        - type: markdown
          view_layout:
            grid-area: cour1
          content: |-

            {% 
              set data = state_attr('sensor.defi_hilo','next_events')[0] 
            %}

            {% 
              set montant = states('sensor.defi_hilo_currentdefi_cash')
            %}

            {% 
              set encour = states('sensor.defi_hilo_in_progress')
            %}

            {% if encour == 'True' %}

              <table width=100%>
                <tr>
                  <th>Période</th>
                  <th>Permis</th>
                  <th>Utilisé</th>
                  <th>Prévus</th>
                  <th>Actuel</th>
                </tr>  
                  <tr>
                    <td align=center>{{ data.phases.preheat_start.timestamp() | timestamp_custom('%HH%M') }}-{{ data.phases.recovery_end.timestamp() | timestamp_custom('%HH%M') }}</td>
                    <td align=center>{{ "%.1f"|format(data.allowed_kWh) }} kWh</td> 
                    <td align=center>{{ "%.1f"|format(data.used_kWh) }} kWh</td>   
                    <td align=center>{{ "%.2f"|format(max(0,data.allowed_kWh - data.used_kWh) * 0.55) }} $</td>
                    <td align=center>{{ montant }} $</td>      
                  </tr>
              </table>

            {% else %}
                Aucune donnée disponible
            {% endif %}

      layout:
        grid-template-columns: 1fr
        grid-auto-flow: row
        grid-template-areas: |
          "cour1"
card_mod:
  class: soft-ui
  style: |
    ha-card {
      --primary-text-color: rgb(var(--my-grey));   
    }
grid_options:
  columns: full
  rows: full
